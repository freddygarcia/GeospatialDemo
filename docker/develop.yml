version: "3"

services:
  proxy:
    image: zoren101/proxy
    container_name: nginx
    image: nginx
    ports:
      - "$APP_PORT:80"
    depends_on:
      - api
      - web
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/access.log:/var/log/nginx/access.log
  db:
    image: "postgis/postgis:11-3.2-alpine"
    container_name: postgres_postgis_db
    hostname: postgres-postgis-db
    healthcheck:
      test: ["CMD", "psql", "-U", "postgres", "-c", "SELECT 1"]
      interval: 5s
      timeout: 3s
      retries: 3
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_NAME
  api:
    build: geospatial-api
    container_name: geospatial_api
    hostname: geospatial-api
    tty: true
    environment:
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_NAME=$DB_NAME
      - DB_PORT=$DB_PORT
      - DB_HOST=$DB_HOST
      - DB_ENGINE=$DB_ENGINE
      - SCRIPT_NAME=$API_URL
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - "./geospatial-api/:/api"
  web:
    build: 
      context: geospatial-front
      args:
        API_URL: $API_URL
        GOOGLE_API_KEY: $GOOGLE_API_KEY
    hostname: geospatial-web
    container_name: geospatial_front
    depends_on:
      - api
    volumes:
      - "./geospatial-front/:/web"
